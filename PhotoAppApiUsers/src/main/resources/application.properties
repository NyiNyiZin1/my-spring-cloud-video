#user
server.port=${PORT:0}
spring.application.name=users-ws
#server.address={ip_address}
#server.address={ip_address}
eureka.client.serviceUrl.defaultZone=http://localhost:8010/eureka
spring.devtools.restart.enabled = true
#loadbalancer according to instance
eureka.instance.prefer-ip-address=true
#eureka.instance.ip-address=${server.address}
eureka.instance.instance-id=${spring.application.name}:${eureka.instance.instance_id:${random.value}}

#h2 memory database
spring.h2.console.enabled=true
spring.h2.console.settings.web-allow-others=true

spring.datasource.url=jdbc:mysql://localhost:3306/photo_app?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
spring.datasource.username=
spring.datasource.password=

# Hibernate
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

#eureka.client.register-with-eureka=false
#eureka.client.fetch-registry=false

#gateway.ip={ip_address}
gateway.ip={ip_address}
#10day
token.expiration_time = 864000000
token.secret=hfgry463hf746hf573ydh475fhy5739
login.url.path = /users/login

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=
spring.rabbitmq.password=

#we would like to know mapping in user controller
#actuator endpoints(communicate with rabbitMq server)
management.endpoints.web.exposure.include=mappings
#second created
